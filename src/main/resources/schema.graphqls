schema {
    query: Query
    mutation: Mutation
}

type Query{
    Complaint(id: ID): Complaint
    ComplaintType(id: ID): ComplaintType
    Role(id: ID): Role
    Product(id: ID): Product
    TaxCategory(id: ID): TaxCategory
    User(id:ID): User
    Order(id:ID): Order
    Category(id:ID): Category
    Subcategory(id: ID): Subcategory
    Supplier(id:ID): Supplier
    Opinion(id:ID): Opinion
    Warehouse(id:ID): Warehouse
    DeliveryAddress(id:ID): DeliveryAddress
    ShipmentMethod(id:ID): ShipmentMethod
}

type Complaint {
    id: ID!,
    complaintType: ComplaintType!
    user: User!
    product: Product!
    order: Order!
    date: String!
}

type ComplaintType {
    id: ID!,
    name: String!
}

type Role {
    id: ID!
    name: String!
    users: [User!]!
}

type Product {
    id: ID!
    name: String!
    price: Int!
    discountPrice: Int!
    noAvailable: Int!
    description: String!
    imagePath: String!
    taxCategory: TaxCategory!
    warehouses: [ProductWarehouse!]!
    suppliers: [ProductSupplier!]!
    categories: [Category!]!
    subcategories: [Subcategory!]!
    orders: [Order!]!
    complaints: [Complaint!]!
    opinions: [Opinion!]!
    wishlist: [User!]!
    visitedBy: [Visited!]!
}

type TaxCategory {
    id: ID!
    taxRate: Int!
    name: String!
}

type ProductWarehouse{
    product: Product!
    warehouse: Warehouse!
    quantity: Int!
}

type Warehouse{
    id: ID!
    name: String!
    address: String!
    products: [ProductWarehouse!]!
}

type Supplier{
    id: ID!
    name: String!
    telephone: String!
    products: [ProductSupplier!]!
}

type ProductSupplier{
    product: Product!
    supplier: Supplier!
    price: Int!
}

type Category{
    id: ID!
    name: String!
    products: [Product!]!
    subcategories: [Subcategory!]!
}

type Subcategory{
    id: ID!
    name: String!
    products: [Product!]!
    category: Category
}

type Visited{
    product: Product
    user: User
}

type User{
    id: ID!
    login: String!
    email: String!
    name: String!
    surname: String!
    address: String!
    birthDate: String!
    telephone: String!
    role: Role!
    visited: [Visited!]!
    wishlist: [Product!]!
    opinions: [Opinion!]!
    complaints: [Complaint!]!
    orders: [Order!]!
    deliveryAddresses: [DeliveryAddress!]!
}

type DeliveryAddress {
    id: ID!
    name: String!
    surnname: String!
    city: String!
    street: String!
    buildingNumber: String!
    postCode: String!
    user: User!
    orders: [Order!]!
}

type Opinion {
    mark: Int!
    text: String!
    user: User!
    product: Product!
    date: String!
}


type Order {
    id: ID!
    products: [Product!]!
    deliveryAddress: DeliveryAddress!
    user: User!
    date: String!
    complaints: [Complaint!]!
    shipmentMethod: ShipmentMethod!
}

type ShipmentMethod {
    id: ID!
    name: String!
    price: Int!
    freeThreshold: Int!
    orders: [Order!]!
}

type Mutation {
    createUser(input: CreateUserInput): User!
    updateUser(input: UpdateUserInput): User!
    deleteUser(id: ID!): User!
    createProduct(input: CreateProductInput): Product!
    updateProduct(input: UpdateProductInput): Product!
    createOrder(input: CreateOrderInput): Order!
    updateOrder(input: UpdateOrderInput): Order!
    createOpinion(input: CreateOpinionInput): Opinion!
    updateOpinion(input: UpdateOpinionInput): Opinion!
    createCategory(input: CreateCategoryInput): Category!
    updateCategory(input: UpdateCategoryInput): Category!
    createSubcategory(input: CreateSubcategoryInput): Subcategory!
    updateSubcategory(input: UpdateSubcategoryInput): Subcategory!
    createComplaint(input: CreatComplaintInput): Complaint!
    updateComplaint(input: UpdateComplaintInput): Complaint!
    createComplainttype(input: CreateComplaintTypeInput): ComplaintType!
    updateComplainttype(input: UpdateComplaintTypeInput): ComplaintType!
    createDeliveryAddress(input: CreateDeliveryAddressInput): DeliveryAddress!
    updateDeliveryAddress(input: UpdateDeliveryAddressInput): DeliveryAddress!
    createRole(input: CreateRoleInput): Role!
    updateRole(input: UpdateRoleInput): Role!
    createShipmentMethod(input: CreateShipmentMethodInput): ShipmentMethod!
    updateShipmentMethod(input: UpdateShipmentMethodInput): ShipmentMethod!
    createTaxCategory(input: CreateTaxCategoryInput): TaxCategory!
    updateTaxCategory(input: UpdateTaxCategoryInput): TaxCategory!
    createVisited(input: CreateVisitedInput): Visited!
    updateVisited(input: UpdateVisitedInput): Visited!
    createSupplier(input: CreateSupplierInput): Supplier!
    updateSupplier(input: UpdateSupplierInput): Supplier!
}

input CreateUserInput {
    login: String!
    password: String!
    email: String!
    name: String!
    surname: String!
    address: String!
    birthDate: String!
    telephone: String!
}

input UpdateUserInput {
    id: ID!
    login: String
    password: String
    email: String
    name: String
    surname: String
    address: String
    birthDate: String
    telephone: String
}

input CreateProductInput {
    name: String!
    price: Int!
    discountPrice: Int!
    noAvailable: Int!
    description: String!
    imagePath: String!
    taxCategoryID: ID!
}

input UpdateProductInput {
    id: ID!
    name: String
    price: Int
    discountPrice: Int
    noAvailable: Int
    description: String
    imagePath: String
    taxCategoryID: ID
}

input CreateOrderInput {
    date: String!
    price: Int!
}

input UpdateOrderInput {
    id: ID!
    date: String
    price: Int
}

input CreateOpinionInput {
    mark: Int!
    text: String!
    date: String!
}

input UpdateOpinionInput {
    id: ID!
    mark: Int
    text: String
    date: String
}

input CreateCategoryInput {
    name: String!
}

input UpdateCategoryInput {
    id: ID!
    name: String
}

input CreateSubcategoryInput {
    name: String!
}

input UpdateSubcategoryInput {
    id: ID!
    name: String
}

input CreatComplaintInput {
    date: String!
}

input UpdateComplaintInput {
    id: ID!
    date: String
}

input CreateComplaintTypeInput {
    name: String!
}

input UpdateComplaintTypeInput {
    id: ID!
    name: String
}

input CreateDeliveryAddressInput {
    name: String!
    surname: String!
    city: String!
    street: String!
    buildingNumber: String!
    postCode: String!
}

input UpdateDeliveryAddressInput {
    id: ID!
    name: String
    surname: String
    city: String
    street: String
    buildingNumber: String
    postCode: String
}

input CreateRoleInput {
    name: String!
}

input UpdateRoleInput {
    id: ID!
    name: String
}

input CreateShipmentMethodInput {
    name: String!
    price: Int!
    freeThreshold: Int!
}

input UpdateShipmentMethodInput {
    id: ID!
    name: String
    price: Int
    freeThreshold: Int
}

input CreateTaxCategoryInput {
    taxRate: Int!
    name: String!
}

input UpdateTaxCategoryInput {
    id: ID!
    taxRate: Int
    name: String
}

input CreateVisitedInput {
    date: String!
}

input UpdateVisitedInput {
    id: ID!
    date: String
}

input CreateSupplierInput {
    name: String!
    telephone: String!
}

input UpdateSupplierInput {
    id: ID!
    name: String
    telephone: String
}



